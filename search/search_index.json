{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"rpi/","text":"Raspberry Pi Post installation tweaks Update packages sudo apt update && sudo apt upgrade -y Change hostname hostnamectl set-hostname <NEW_HOSTNAME> And add an entry to /etc/hosts 127.0.0.1 new-hostname Setup firewall Set default rules and allow SSH connexion through the firewall sudo ufw default deny incoming sudo ufw default allow outgoing sudo ufw allow ssh sudo ufw enable AdGuard Home AdGuard wiki Installation Download and extract Linux ARM: 32-bit ARMv6 (recommended for Raspberry Pi) wget https://static.adguard.com/adguardhome/release/AdGuardHome_linux_armv6.tar.gz tar -xf AdGuardHome_linux_armv6.tar.gz Enable firewall temporary rules to access AdGuard initial configuration wizard on port 3000 sudo ufw allow 3000 Run AdGuard and configure until the last step shutdown the app using CTRL+C twice. sudo ./AdGuardHome Display ufw temporary firewall rules and remove rule by rule number sudo ufw status numbered sudo ufw delete {rule-number-here} Install AdGuard service sudo ./AdGuardHome -s install Add rule to allow HTTP connections sudo ufw allow http Add rules to allow DNS connections sudo ufw allow 53/tcp sudo ufw allow 53/udp Configure Nginx as a reverse proxy server for AdGuard Home Edit AdGuard configuration to bind the service to another port than HTTP/80. Change configuration to another port: bind_host: 127.0.0.1 and bind_port: 81 and restart the service. sudo nano AdGuardHome.yaml sudo ./AdGuardHome -s restart Install Nginx sudo apt install nginx -y Sample nginx reverse proxy configuration location /agh/ { proxy_pass http://localhost:81/; proxy_redirect / /agh/; proxy_cookie_path / /agh/; } Add the reverse proxy to Nginx configuration and restart the service sudo nano /etc/nginx/sites-available/default sudo systemctl restart nginx Access AdGuard Home dashboard SERVER_IP/adg Custom DNS blocklists SebSauvage Hostfile https://sebsauvage.net/hosts/hosts-adguard AdGuard Social Media filter https://filters.adtidy.org/extension/chromium/filters/4.txt AdGuard Tracking Protection filter https://filters.adtidy.org/extension/chromium/filters/3.txt AdGuard Base filter https://filters.adtidy.org/extension/chromium/filters/2.txt AdGuard Annoyances filter https://filters.adtidy.org/extension/chromium/filters/14.txt Filter unblocking search ads and self-promotion https://filters.adtidy.org/extension/chromium/filters/10.txt AdGuard Russian filter https://filters.adtidy.org/extension/chromium/filters/1.txt AdGuard German filter https://filters.adtidy.org/extension/chromium/filters/6.txt AdGuard French filter https://filters.adtidy.org/extension/chromium/filters/16.txt AdGuard Japanese filter https://filters.adtidy.org/extension/chromium/filters/7.txt AdGuard Mobile Ads filter https://filters.adtidy.org/extension/chromium/filters/11.txt AdGuard DNS filter https://filters.adtidy.org/extension/chromium/filters/15.txt WaLLy3K's Blacklist https://v.firebog.net/hosts/static/w3kbl.txt ZeroDot1 CoinBlockerLists https://zerodot1.gitlab.io/CoinBlockerLists/hosts_browser Fademind's Risky Hosts https://raw.githubusercontent.com/FadeMind/hosts.extras/master/add.Risk/hosts Spam404 https://raw.githubusercontent.com/Spam404/lists/master/main-blacklist.txt DigitalSide Threat-Intel https://osint.digitalside.it/Threat-Intel/lists/latestdomains.txt Easy privacy https://v.firebog.net/hosts/Easyprivacy.txt Quidsup Tracker https://gitlab.com/quidsup/notrack-blocklists/raw/master/notrack-blocklist.txt Blocklist Scam https://blocklist.site/app/dl/scam Blocklist Fraud https://blocklist.site/app/dl/fraud Blocklist Phishing https://blocklist.site/app/dl/phishing Blocklist Ads https://blocklist.site/app/dl/ads Deluge Deluge wiki Installation Headless installation from commandline sudo apt install deluged -y Fix Ubuntu 21.04 bugs - NOT WORKING Install deluge lastest version using Deluge PPA Repository sudo add-apt-repository ppa:deluge-team/stable sudo apt update sudo apt install deluged Install newest libtorrent version sudo add-apt-repository ppa:libtorrent.org/1.2-daily sudo apt update sudo apt install python3-libtorrent Fix Ubuntu 21.04 bugs https://forum.deluge-torrent.org/viewtopic.php?t=55970 Service configuration Create a service specific user sudo adduser --system --gecos \"Deluge Service\" --disabled-password --group --home /var/lib/deluge deluge Add to the deluge group any users you wish to be able to easily manage or access files downloaded by Deluge sudo adduser ubuntu deluge Create a systemd service file for deluge deamon sudo nano /etc/systemd/system/deluged.service with the following contents: [Unit] Description=Deluge Bittorrent Client Daemon After=network-online.target [Service] Type=simple UMask=007 ExecStart=/usr/bin/deluged -d -l /var/log/deluge/daemon.log -L warning --logrotate Restart=on-failure # Configures the time to wait before service is stopped forcefully. TimeoutStopSec=300 [Install] WantedBy=multi-user.target To run the service using the created user e.g. deluge, first create the service configuration directory: sudo mkdir /etc/systemd/system/deluged.service.d/ Then create a user file: sudo nano /etc/systemd/system/deluged.service.d/user.conf with the following contents: # Override service user [Service] User=deluge Group=deluge Create service logging sudo mkdir -p /var/log/deluge sudo chown -R deluge:deluge /var/log/deluge sudo chmod -R 750 /var/log/deluge Now enable it to start up on boot, start the service and verify it is running: sudo systemctl enable /etc/systemd/system/deluged.service sudo systemctl start deluged sudo systemctl status deluged Deluge configuration Enable remote connections to your Deluge daemon, edit: sudo nano /var/lib/deluge/.config/deluge/core.conf and change to following lines: allow_remote\": true Add a user to connect to the deamon remotly, edit: sudo nano /var/lib/deluge/.config/deluge/auth add a line to the bottom of the configuration file with the following convention: user:password:level Firewall configuration Enable firewall rules to access deluge on port 58846 sudo ufw allow 58846 sudo ufw allow 5644 sudo ufw reload","title":"Raspberry Pi"},{"location":"rpi/#raspberry-pi","text":"","title":"Raspberry Pi"},{"location":"rpi/#post-installation-tweaks","text":"","title":"Post installation tweaks"},{"location":"rpi/#update-packages","text":"sudo apt update && sudo apt upgrade -y","title":"Update packages"},{"location":"rpi/#change-hostname","text":"hostnamectl set-hostname <NEW_HOSTNAME> And add an entry to /etc/hosts 127.0.0.1 new-hostname","title":"Change hostname"},{"location":"rpi/#setup-firewall","text":"Set default rules and allow SSH connexion through the firewall sudo ufw default deny incoming sudo ufw default allow outgoing sudo ufw allow ssh sudo ufw enable","title":"Setup firewall"},{"location":"rpi/#adguard-home","text":"AdGuard wiki","title":"AdGuard Home"},{"location":"rpi/#installation","text":"Download and extract Linux ARM: 32-bit ARMv6 (recommended for Raspberry Pi) wget https://static.adguard.com/adguardhome/release/AdGuardHome_linux_armv6.tar.gz tar -xf AdGuardHome_linux_armv6.tar.gz Enable firewall temporary rules to access AdGuard initial configuration wizard on port 3000 sudo ufw allow 3000 Run AdGuard and configure until the last step shutdown the app using CTRL+C twice. sudo ./AdGuardHome Display ufw temporary firewall rules and remove rule by rule number sudo ufw status numbered sudo ufw delete {rule-number-here} Install AdGuard service sudo ./AdGuardHome -s install Add rule to allow HTTP connections sudo ufw allow http Add rules to allow DNS connections sudo ufw allow 53/tcp sudo ufw allow 53/udp","title":"Installation"},{"location":"rpi/#configure-nginx-as-a-reverse-proxy-server-for-adguard-home","text":"Edit AdGuard configuration to bind the service to another port than HTTP/80. Change configuration to another port: bind_host: 127.0.0.1 and bind_port: 81 and restart the service. sudo nano AdGuardHome.yaml sudo ./AdGuardHome -s restart Install Nginx sudo apt install nginx -y Sample nginx reverse proxy configuration location /agh/ { proxy_pass http://localhost:81/; proxy_redirect / /agh/; proxy_cookie_path / /agh/; } Add the reverse proxy to Nginx configuration and restart the service sudo nano /etc/nginx/sites-available/default sudo systemctl restart nginx Access AdGuard Home dashboard SERVER_IP/adg","title":"Configure Nginx as a reverse proxy server for AdGuard Home"},{"location":"rpi/#custom-dns-blocklists","text":"SebSauvage Hostfile https://sebsauvage.net/hosts/hosts-adguard AdGuard Social Media filter https://filters.adtidy.org/extension/chromium/filters/4.txt AdGuard Tracking Protection filter https://filters.adtidy.org/extension/chromium/filters/3.txt AdGuard Base filter https://filters.adtidy.org/extension/chromium/filters/2.txt AdGuard Annoyances filter https://filters.adtidy.org/extension/chromium/filters/14.txt Filter unblocking search ads and self-promotion https://filters.adtidy.org/extension/chromium/filters/10.txt AdGuard Russian filter https://filters.adtidy.org/extension/chromium/filters/1.txt AdGuard German filter https://filters.adtidy.org/extension/chromium/filters/6.txt AdGuard French filter https://filters.adtidy.org/extension/chromium/filters/16.txt AdGuard Japanese filter https://filters.adtidy.org/extension/chromium/filters/7.txt AdGuard Mobile Ads filter https://filters.adtidy.org/extension/chromium/filters/11.txt AdGuard DNS filter https://filters.adtidy.org/extension/chromium/filters/15.txt WaLLy3K's Blacklist https://v.firebog.net/hosts/static/w3kbl.txt ZeroDot1 CoinBlockerLists https://zerodot1.gitlab.io/CoinBlockerLists/hosts_browser Fademind's Risky Hosts https://raw.githubusercontent.com/FadeMind/hosts.extras/master/add.Risk/hosts Spam404 https://raw.githubusercontent.com/Spam404/lists/master/main-blacklist.txt DigitalSide Threat-Intel https://osint.digitalside.it/Threat-Intel/lists/latestdomains.txt Easy privacy https://v.firebog.net/hosts/Easyprivacy.txt Quidsup Tracker https://gitlab.com/quidsup/notrack-blocklists/raw/master/notrack-blocklist.txt Blocklist Scam https://blocklist.site/app/dl/scam Blocklist Fraud https://blocklist.site/app/dl/fraud Blocklist Phishing https://blocklist.site/app/dl/phishing Blocklist Ads https://blocklist.site/app/dl/ads","title":"Custom DNS blocklists"},{"location":"rpi/#deluge","text":"Deluge wiki","title":"Deluge"},{"location":"rpi/#installation_1","text":"Headless installation from commandline sudo apt install deluged -y","title":"Installation"},{"location":"rpi/#fix-ubuntu-2104-bugs-not-working","text":"Install deluge lastest version using Deluge PPA Repository sudo add-apt-repository ppa:deluge-team/stable sudo apt update sudo apt install deluged Install newest libtorrent version sudo add-apt-repository ppa:libtorrent.org/1.2-daily sudo apt update sudo apt install python3-libtorrent","title":"Fix Ubuntu 21.04 bugs - NOT WORKING"},{"location":"rpi/#fix-ubuntu-2104-bugs","text":"https://forum.deluge-torrent.org/viewtopic.php?t=55970","title":"Fix Ubuntu 21.04 bugs"},{"location":"rpi/#service-configuration","text":"Create a service specific user sudo adduser --system --gecos \"Deluge Service\" --disabled-password --group --home /var/lib/deluge deluge Add to the deluge group any users you wish to be able to easily manage or access files downloaded by Deluge sudo adduser ubuntu deluge Create a systemd service file for deluge deamon sudo nano /etc/systemd/system/deluged.service with the following contents: [Unit] Description=Deluge Bittorrent Client Daemon After=network-online.target [Service] Type=simple UMask=007 ExecStart=/usr/bin/deluged -d -l /var/log/deluge/daemon.log -L warning --logrotate Restart=on-failure # Configures the time to wait before service is stopped forcefully. TimeoutStopSec=300 [Install] WantedBy=multi-user.target To run the service using the created user e.g. deluge, first create the service configuration directory: sudo mkdir /etc/systemd/system/deluged.service.d/ Then create a user file: sudo nano /etc/systemd/system/deluged.service.d/user.conf with the following contents: # Override service user [Service] User=deluge Group=deluge Create service logging sudo mkdir -p /var/log/deluge sudo chown -R deluge:deluge /var/log/deluge sudo chmod -R 750 /var/log/deluge Now enable it to start up on boot, start the service and verify it is running: sudo systemctl enable /etc/systemd/system/deluged.service sudo systemctl start deluged sudo systemctl status deluged","title":"Service configuration"},{"location":"rpi/#deluge-configuration","text":"Enable remote connections to your Deluge daemon, edit: sudo nano /var/lib/deluge/.config/deluge/core.conf and change to following lines: allow_remote\": true Add a user to connect to the deamon remotly, edit: sudo nano /var/lib/deluge/.config/deluge/auth add a line to the bottom of the configuration file with the following convention: user:password:level","title":"Deluge configuration"},{"location":"rpi/#firewall-configuration","text":"Enable firewall rules to access deluge on port 58846 sudo ufw allow 58846 sudo ufw allow 5644 sudo ufw reload","title":"Firewall configuration"},{"location":"programming/clean_code/","text":"Clean Coding Principles in C Resources \"Code Complete 2\" by Steve McConnell \"Clean Code: A Handbook of Agile Software Craftsmanship\" by Robert C. Martin \"The Pragmatic Programmer: From Journeyman to Master\" by Andrew Hunt & David Thomas Three Clean Code Principles Select the right tool for the job High signal to noise ratio, clean code optimizes for signal and strives to remove any noise that the reader can easily read the logic and understand the intent. Self-documenting, write code in such a clear and expressive style that no documentation is needed at all. Maximizing Signal to Noise Signal Signal = code that follows the \"TED rule\". - Terse: code shouldn't be excessively wordy - Expressive: clear what the code is trying to do - Does one thing: the code should have a clear responsability Noise Noise = code that reduce readability and hinder maintenance - High cyclomatic complexity - Huge classes - Excessive indentation - Long methods - Zombie code - Repetition - Unnecessary comments - No whitespace - Overly verbose - Poorly named structures The \"rule of 7\" effects: Number of parameters per method Number of methods in a class Number of variables currently in scope DRY principle: Don't Repeat Yourself Databases Database are normalized in an effort to assure each piece of data is defined in a single place. This assures that the database operates efficiently, consistently and eases maintenance. Duplication Issues Copy paste is often a design problem - Decreases signal to noise ratio - Increases the number of lines of code - Creates a maintenance problem Self-documenting code Clear intent: clearly express the intent so that readers understand exactly what the programmer is trying to accomplish Layers of abstraction: should be used so that the problem domain can be considered and walked through at different levels of detail Format for readability: formatting in a friendly and consistent manner will optimize the reading experience Favor code over comments, favoring code over comments when possible will assure that the code is as expressive as it can be without relying on comments to explain away unnecessary ambiguity Self-documenting code idealy eliminate the need for out-of-band documentation (such as JavaDoc, wikis, ...) Naming classes Specific names encourage small, cohesive classes A well-design class should have a single responsibility, and its name should help reflect that Class names are noun not verbs Avoid Generic suffixes ( manager, processor, Common, Utility) Quality of the class name ? Ask the following question: is an instance of [this] logical ? Naming Methods With a good method name, the reader doesn't need to read the method to know what it does. Rubber ducking Verbalizing aids creativity, explain what a class does out loud Explain it to the rubber duck Booleans Naming Booleans Well-named boolean should sound like a true/false question: isOpen, done, isActive, loggedIn Not like a command: start, open, status Naming: Strive for Symmetry Use symmetrical names like: on/off, fast/slow unlike: quick/slow, on/disable Boolean Comparison Compare boolean implicitly, don't do: if (loggedIn == true) { ... } do: if (loggedIn) { ... } Boolean Assignments Assign boolean implicitly, do: bool goingToChipotleForLunch = cashInWallet > 6.00; Write positive boolean conditions Be positive (don't be anti-negative), don't do: if (!isNotLoggedIn) Ternary expressions Don't use chaining or nesting ternaries Be Strongly Typed Be strongly typed, not \"stringly typed\" Don't use strings: if (employeeType == \"manager\") { ... } Use enums: if (employee.type == EmployeeType.Manager) { ... } Magic numbers, magic strings Magic numbers/strings are to be avoided because they require careful review of the context and they expect the reader to fill gaps. Handling Complex Conditionals Use intermediate variables Encapsulate via function Prefer Polymorphism over Enums Favor polymorphism over Switch statement. Each class knows how to handle its unique behaviors. Clean methods and functions Function vs Method Both methods and functions are pieces of code, called by name. Methods are associated with an object. When to create of function? Duplication Indentation Unclear intent Help maintain single responsability Arrow Code Arrow code refers to excessive indentation levels. Arrow code is a sign that the code has a high cyclomatic complexity (a measure of the number of paths through code). Fail fast Add guard clauses to throw an exception as soon as an unexpected situation that can't be handled occurs. Guard clauses ensures a method inputs are valid before continuing processing. Add default to switch statements and throw exceptions to fail fast Return early \"Use a return when it enhances readability... In certain routines, once you know the answer... not returning immediately means that you have to write more code.\" Code Complete, Steve McConnell Parameters A high number of parameters makes a function harder to understand. It's a sign the function is doing too much. Strive for 0-2 parameters, this will make the code easier to read, understand and test. Signs a Method Is too Long Whitespace and comments Scrolling required Easy to name with a single define task Multiple conditionals Many layers of abstraction Handling Exceptions Exception types: 1. Unrecoverable Null reference File not found Access denied 2. Recoverable Retry connection Try a different file Wait and try again 3. Ignorable Logging The correct behavior for a broken application is to crash immediately. Fail fast. Fail loud Clean classes When to Create a Class? New concept : abstract or real world Low cohesion : methods should relate Promote reuse : small and targeted Reduce complexity : solve once, hide away the complexity Clarify parameters : Identify a group of data Proximity Principle Make code read top to bottom when possible Keep related actions together The boy scout rule \"Leave the code you're editing a little better than you found it\" Clean Code, Robert C. Martin","title":"Clean Code"},{"location":"programming/clean_code/#clean-coding-principles-in-c","text":"","title":"Clean Coding Principles in C"},{"location":"programming/clean_code/#resources","text":"\"Code Complete 2\" by Steve McConnell \"Clean Code: A Handbook of Agile Software Craftsmanship\" by Robert C. Martin \"The Pragmatic Programmer: From Journeyman to Master\" by Andrew Hunt & David Thomas","title":"Resources"},{"location":"programming/clean_code/#three-clean-code-principles","text":"Select the right tool for the job High signal to noise ratio, clean code optimizes for signal and strives to remove any noise that the reader can easily read the logic and understand the intent. Self-documenting, write code in such a clear and expressive style that no documentation is needed at all.","title":"Three Clean Code Principles"},{"location":"programming/clean_code/#maximizing-signal-to-noise","text":"","title":"Maximizing Signal to Noise"},{"location":"programming/clean_code/#signal","text":"Signal = code that follows the \"TED rule\". - Terse: code shouldn't be excessively wordy - Expressive: clear what the code is trying to do - Does one thing: the code should have a clear responsability","title":"Signal"},{"location":"programming/clean_code/#noise","text":"Noise = code that reduce readability and hinder maintenance - High cyclomatic complexity - Huge classes - Excessive indentation - Long methods - Zombie code - Repetition - Unnecessary comments - No whitespace - Overly verbose - Poorly named structures","title":"Noise"},{"location":"programming/clean_code/#the-rule-of-7-effects","text":"Number of parameters per method Number of methods in a class Number of variables currently in scope","title":"The \"rule of 7\" effects:"},{"location":"programming/clean_code/#dry-principle-dont-repeat-yourself","text":"","title":"DRY principle: Don't Repeat Yourself"},{"location":"programming/clean_code/#databases","text":"Database are normalized in an effort to assure each piece of data is defined in a single place. This assures that the database operates efficiently, consistently and eases maintenance.","title":"Databases"},{"location":"programming/clean_code/#duplication-issues","text":"Copy paste is often a design problem - Decreases signal to noise ratio - Increases the number of lines of code - Creates a maintenance problem","title":"Duplication Issues"},{"location":"programming/clean_code/#self-documenting-code","text":"Clear intent: clearly express the intent so that readers understand exactly what the programmer is trying to accomplish Layers of abstraction: should be used so that the problem domain can be considered and walked through at different levels of detail Format for readability: formatting in a friendly and consistent manner will optimize the reading experience Favor code over comments, favoring code over comments when possible will assure that the code is as expressive as it can be without relying on comments to explain away unnecessary ambiguity Self-documenting code idealy eliminate the need for out-of-band documentation (such as JavaDoc, wikis, ...)","title":"Self-documenting code"},{"location":"programming/clean_code/#naming-classes","text":"Specific names encourage small, cohesive classes A well-design class should have a single responsibility, and its name should help reflect that Class names are noun not verbs Avoid Generic suffixes ( manager, processor, Common, Utility) Quality of the class name ? Ask the following question: is an instance of [this] logical ?","title":"Naming classes"},{"location":"programming/clean_code/#naming-methods","text":"With a good method name, the reader doesn't need to read the method to know what it does.","title":"Naming Methods"},{"location":"programming/clean_code/#rubber-ducking","text":"Verbalizing aids creativity, explain what a class does out loud Explain it to the rubber duck","title":"Rubber ducking"},{"location":"programming/clean_code/#booleans","text":"","title":"Booleans"},{"location":"programming/clean_code/#naming-booleans","text":"Well-named boolean should sound like a true/false question: isOpen, done, isActive, loggedIn Not like a command: start, open, status","title":"Naming Booleans"},{"location":"programming/clean_code/#naming-strive-for-symmetry","text":"Use symmetrical names like: on/off, fast/slow unlike: quick/slow, on/disable","title":"Naming: Strive for Symmetry"},{"location":"programming/clean_code/#boolean-comparison","text":"Compare boolean implicitly, don't do: if (loggedIn == true) { ... } do: if (loggedIn) { ... }","title":"Boolean Comparison"},{"location":"programming/clean_code/#boolean-assignments","text":"Assign boolean implicitly, do: bool goingToChipotleForLunch = cashInWallet > 6.00;","title":"Boolean Assignments"},{"location":"programming/clean_code/#write-positive-boolean-conditions","text":"Be positive (don't be anti-negative), don't do: if (!isNotLoggedIn)","title":"Write positive boolean conditions"},{"location":"programming/clean_code/#ternary-expressions","text":"Don't use chaining or nesting ternaries","title":"Ternary expressions"},{"location":"programming/clean_code/#be-strongly-typed","text":"Be strongly typed, not \"stringly typed\" Don't use strings: if (employeeType == \"manager\") { ... } Use enums: if (employee.type == EmployeeType.Manager) { ... }","title":"Be Strongly Typed"},{"location":"programming/clean_code/#magic-numbers-magic-strings","text":"Magic numbers/strings are to be avoided because they require careful review of the context and they expect the reader to fill gaps.","title":"Magic numbers, magic strings"},{"location":"programming/clean_code/#handling-complex-conditionals","text":"Use intermediate variables Encapsulate via function","title":"Handling Complex Conditionals"},{"location":"programming/clean_code/#prefer-polymorphism-over-enums","text":"Favor polymorphism over Switch statement. Each class knows how to handle its unique behaviors.","title":"Prefer Polymorphism over Enums"},{"location":"programming/clean_code/#clean-methods-and-functions","text":"","title":"Clean methods and functions"},{"location":"programming/clean_code/#function-vs-method","text":"Both methods and functions are pieces of code, called by name. Methods are associated with an object.","title":"Function vs Method"},{"location":"programming/clean_code/#when-to-create-of-function","text":"Duplication Indentation Unclear intent Help maintain single responsability","title":"When to create of function?"},{"location":"programming/clean_code/#arrow-code","text":"Arrow code refers to excessive indentation levels. Arrow code is a sign that the code has a high cyclomatic complexity (a measure of the number of paths through code).","title":"Arrow Code"},{"location":"programming/clean_code/#fail-fast","text":"Add guard clauses to throw an exception as soon as an unexpected situation that can't be handled occurs. Guard clauses ensures a method inputs are valid before continuing processing. Add default to switch statements and throw exceptions to fail fast","title":"Fail fast"},{"location":"programming/clean_code/#return-early","text":"\"Use a return when it enhances readability... In certain routines, once you know the answer... not returning immediately means that you have to write more code.\" Code Complete, Steve McConnell","title":"Return early"},{"location":"programming/clean_code/#parameters","text":"A high number of parameters makes a function harder to understand. It's a sign the function is doing too much. Strive for 0-2 parameters, this will make the code easier to read, understand and test.","title":"Parameters"},{"location":"programming/clean_code/#signs-a-method-is-too-long","text":"Whitespace and comments Scrolling required Easy to name with a single define task Multiple conditionals Many layers of abstraction","title":"Signs a Method Is too Long"},{"location":"programming/clean_code/#handling-exceptions","text":"Exception types:","title":"Handling Exceptions"},{"location":"programming/clean_code/#1-unrecoverable","text":"Null reference File not found Access denied","title":"1. Unrecoverable"},{"location":"programming/clean_code/#2-recoverable","text":"Retry connection Try a different file Wait and try again","title":"2. Recoverable"},{"location":"programming/clean_code/#3-ignorable","text":"Logging The correct behavior for a broken application is to crash immediately. Fail fast. Fail loud","title":"3. Ignorable"},{"location":"programming/clean_code/#clean-classes","text":"","title":"Clean classes"},{"location":"programming/clean_code/#when-to-create-a-class","text":"New concept : abstract or real world Low cohesion : methods should relate Promote reuse : small and targeted Reduce complexity : solve once, hide away the complexity Clarify parameters : Identify a group of data","title":"When to Create a Class?"},{"location":"programming/clean_code/#proximity-principle","text":"Make code read top to bottom when possible Keep related actions together","title":"Proximity Principle"},{"location":"programming/clean_code/#the-boy-scout-rule","text":"\"Leave the code you're editing a little better than you found it\" Clean Code, Robert C. Martin","title":"The boy scout rule"}]}